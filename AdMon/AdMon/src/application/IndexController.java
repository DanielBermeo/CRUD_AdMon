package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.ResourceBundle;

import db.Conexion;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.event.EventType;
import javafx.scene.control.Label;

import javafx.scene.control.ComboBox;

import javafx.scene.control.Tab;

import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.stage.Window;
import javafx.stage.WindowEvent;
import objs.Fondos;
import javafx.scene.control.TableView;

import javafx.scene.control.DatePicker;

import javafx.scene.control.TableColumn;

public class IndexController implements Initializable{
	private Fondos fondoSeleccionado = null;
	
	@FXML
	private Tab tabGeneral;
	@FXML
	private Label lblCapitalTotal;
	@FXML
	private Label lblDeudaTotal;
	@FXML
	private Label lblEstabilidad;
	@FXML
	private TableView<Fondos> tblFondos;
	@FXML
	private TableColumn<Fondos, String> clmnNomFondo;
	@FXML
	private TableColumn<Fondos, Integer> clmnMontoDeseado;
	@FXML
	private TableColumn<Fondos, Integer> clmnCapitalAct;
	@FXML
	private Button btnCrearFondo;
	@FXML
	private Button btnDetalleFondo;
	@FXML
	private Button btnEditarFondo;
	@FXML
	private Button btnAnadirIngresoGnrl;
	@FXML
	private Button btnRegistrarGastoGnrl;
	@FXML
	private Label lblTituloTabla;
	@FXML
	private Label lblSumatoriaIngresosNum;
	@FXML
	private Label lblTitSumatoriaIng;
	@FXML
	private TableView tblIngresos;
	@FXML
	private TableColumn clmnFechaIngreso;
	@FXML
	private TableColumn clmnMontoIngreso;
	@FXML
	private TableColumn clmConceptoIngreso;
	@FXML
	private TableColumn clmnFondoDestino;
	@FXML
	private Button btnAnadirIngreso;
	@FXML
	private Button btnFiltrarIngresos;
	@FXML
	private DatePicker dateInicioIngresos;
	@FXML
	private DatePicker dateFinalingresos;
	@FXML
	private Label lblRiruloTablaGastos;
	@FXML
	private Label lblSumatoriaGastosNum;
	@FXML
	private Label lblTitSumatoriaGts;
	@FXML
	private TableView tblGastos;
	@FXML
	private TableColumn clmFechaGasto;
	@FXML
	private TableColumn clmnMontoGasto;
	@FXML
	private TableColumn clmnConceptoGasto;
	@FXML
	private TableColumn clmnClasificacion;
	@FXML
	private TableColumn clmnFondoTomado;
	@FXML
	private Button btnRegistrarGasto;
	@FXML
	private Button btnFiltrarGastos;
	@FXML
	private DatePicker dateInicioGastos;
	@FXML
	private DatePicker dateFinGastos;
	@FXML
	private Label lblSaldoTotalAct;
	@FXML
	private TableView tblSaldosActivos;
	@FXML
	private TableColumn clmnDeuda;
	@FXML
	private TableColumn clmnFechaSaldo;
	@FXML
	private TableColumn clmnMontoPendiente;
	@FXML
	private DatePicker dateFechaBusquedaSaldo;
	@FXML
	private TableView tblBusquedaSaldos;
	@FXML
	private TableColumn clmnFechaSaldoB;
	@FXML
	private TableColumn clmnDeudaB;
	@FXML
	private TableColumn clmnFondoPago;
	@FXML
	private ComboBox cmbSeleccDeuda;
	@FXML
	private ComboBox cmbSeleccFondo;
	@FXML
	private Button btnBuscarSaldos;
	@FXML
	private TableView tblHistoricoDeuda;
	@FXML
	private TableColumn clmConceptoDeuda;
	@FXML
	private TableColumn clmnMontoDeuda;
	@FXML
	private TableColumn clmnEstadoDeuda;
	@FXML
	private TableColumn clmnFechaDeuda;
	@FXML
	private Button btnFiltrarHD;
	@FXML
	private TextField txtFieldConceptoFiltroHD;
	@FXML
	private ComboBox cmbEstadoFiltroHD;
	@FXML
	private DatePicker dateFechaFiltroHD;
    @FXML
    private Tab tabGastos;
    @FXML
    private Tab tabIngresos;
    @FXML
    private Tab tabDeudaHist;
    @FXML
    private Tab tabSaldosAct;
	
	// Event Listener on TableView[#tblFondos].onMouseClicked
	@FXML
	public void seleccionTabla(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnCrearFondo].onAction
	@FXML
	public void crearFondo(ActionEvent event) {
		
		try {
			
			Pane root = (Pane) FXMLLoader.load(getClass().getResource("AgregarFondo.fxml"));
			Scene escena = new Scene(root);
			Stage escenario = new Stage();
			escenario.setScene(escena);
			escenario.initStyle(StageStyle.UNDECORATED);
			escenario.initModality(Modality.APPLICATION_MODAL);
			 escenario.setOnHidden(e -> {
		            initialize(null, null);
		        });

			escenario.show();
			
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
	}
	// Event Listener on Button[#btnDetalleFondo].onAction
	@FXML
	public void detalleFondo(ActionEvent event) {


		try {
			
			FXMLLoader carga = new FXMLLoader();
			carga.setLocation(getClass().getResource("DetalloFondo.fxml"));
			Pane root = (Pane) carga.load();
			Scene escena = new Scene(root);
			Stage escenario = new Stage();
			escenario.setScene(escena);
			escenario.initStyle(StageStyle.UNDECORATED);
			escenario.initModality(Modality.APPLICATION_MODAL);
			
			DetalloFondoController cntllr = (DetalloFondoController) carga.getController();
			cntllr.setFondo(fondoSeleccionado);
			
			
			escenario.show();
			
			
			
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
	// Event Listener on Button[#btnEditarFondo].onAction
	@FXML
	public void editarFondo(ActionEvent event) {

		try {
			
			FXMLLoader carga = new FXMLLoader();
			carga.setLocation(getClass().getResource("EditarFondo.fxml"));
			Pane root = (Pane) carga.load();
			Scene escena = new Scene(root);
			Stage escenario = new Stage();
			escenario.setScene(escena);
			escenario.initStyle(StageStyle.UNDECORATED);
			escenario.initModality(Modality.APPLICATION_MODAL);
			
			EditarFondoController cntllr = (EditarFondoController) carga.getController();
			cntllr.setFondo(fondoSeleccionado);
			
			escenario.setOnHidden(e -> {
		            initialize(null, null);
		        });
			
			escenario.show();
			
			
			
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
	// Event Listener on Button[#btnAnadirIngresoGnrl].onAction
	@FXML
	public void anadirIngresoGnrl(ActionEvent event) {
		
	}
	// Event Listener on Button[#btnRegistrarGastoGnrl].onAction
	@FXML
	public void registrarGastoGnrl(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnAnadirIngreso].onAction
	@FXML
	public void anadirIngreso(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnFiltrarIngresos].onAction
	@FXML
	public void filtrarIngresos(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnRegistrarGasto].onAction
	@FXML
	public void registrarIngreso(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnFiltrarGastos].onAction
	@FXML
	public void filtrarGastos(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnBuscarSaldos].onAction
	@FXML
	public void buscarSaldos(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnFiltrarHD].onAction
	@FXML
	public void iltrarHistoricoDeuda(ActionEvent event) {
		// TODO Autogenerated
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		btnDetalleFondo.setDisable(true);
		btnEditarFondo.setDisable(true);
		try {
			Conexion cn = new Conexion();
			// Llenado de labels de General
			lblCapitalTotal.setText("$ "+cn.capitalTotal());
			lblDeudaTotal.setText("$ " + cn.deudaActiva());
			lblEstabilidad.setText("$ " + cn.estabilidad());
			
			// Llenado de la tabla
			this.clmnNomFondo.setCellValueFactory(new PropertyValueFactory<>("nombre"));
			this.clmnMontoDeseado.setCellValueFactory(new PropertyValueFactory<>("montoDeseado"));
			this.clmnCapitalAct.setCellValueFactory(new PropertyValueFactory<>("capitalActual"));
			
			this.tblFondos.getSelectionModel().selectedItemProperty().addListener
			(new ChangeListener<Object>() {

				@Override
				public void changed(ObservableValue<? extends Object> arg0, Object arg1, Object arg2) {
					// TODO Auto-generated method stub
					fondoSeleccionado = (Fondos)arg2;
					btnEditarFondo.setDisable(false);
					btnDetalleFondo.setDisable(false);
				}
			
			});
			ArrayList<Fondos> fondos = cn.traerFondos();
			this.tblFondos.setItems(FXCollections.observableArrayList(fondos));
			
			
			// Cerrar conexion
			cn.cerrarConexion();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	

	
	
	
	
}
